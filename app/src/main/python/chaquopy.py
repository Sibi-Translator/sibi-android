import numpy as np
import tflite_runtime.interpreter as tflite

from os.path import dirname, join
filename = join(dirname(__file__), "model.tflite")

def test():
  return np.absolute(-10)

def getX(pose):
  return np.array(pose)[:, 0]

def getY(pose):
  return np.array(pose)[:, 1]

def getZ(pose):
  return np.array(pose)[:, 2]

arr_frame = []
rd

da = {0: 'A', 1: 'AGUSTUS', 2: 'APA', 3: 'APRIL', 4: 'B', 5: 'BERAPA', 6: 'BULAN', 7: 'C', 8: 'D', 9: 'DESEMBER', 10: 'DIA', 11: 'E', 12: 'F', 13: 'FEBRUARI', 14: 'G', 15: 'H', 16: 'HAI', 17: 'HARI', 18: 'I', 19: 'J', 20: 'JAM', 21: 'JANUARI', 22: 'JULI', 23: 'JUNI', 24: 'K', 25: 'KABAR', 26: 'KAMI', 27: 'KAMU', 28: 'KAPAN', 29: 'KITA', 30: 'L', 31: 'M', 32: 'MAAF', 33: 'MALAM', 34: 'MARET', 35: 'MEI', 36: 'MENGAPA', 37: 'MEREKA', 38: 'N', 39: 'NAMA', 40: 'NOVEMBER', 41: 'O', 42: 'OKTOBER', 43: 'P', 44: 'PAGI', 45: 'Q', 46: 'R', 47: 'S', 48: 'SAMA', 49: 'SAYA', 50: 'SEPTEMBER', 51: 'SIAPA', 52: 'SORE', 53: 'T', 54: 'TAHUN', 55: 'TANGGAL', 56: 'TERIMA KASIH', 57: 'TOLONG', 58: 'U', 59: 'UMUR', 60: 'V', 61: 'W', 62: 'X', 63: 'Y', 64: 'Z'}

def processData(pose, right, left, face):
  global arr_frame
  lms_p, lms_r, lms_l, lms_f = np.array(pose), np.array(right), np.array(left), np.array(face)
  # normalize xyz landmark
  ssx_p, ssy_p, ssz_p = lms_p[:, 0], lms_p[:, 1], lms_p[:, 2]
  ssx_r, ssy_r, ssz_r = lms_r[:, 0], lms_r[:, 1], lms_r[:, 2]
  ssx_l, ssy_l, ssz_l = lms_l[:, 0], lms_l[:, 1], lms_l[:, 2]
  ssx_f, ssy_f, ssz_f = lms_f[:, 0], lms_f[:, 1], lms_f[:, 2]
  # Standardization Z
  p_std, r_std, l_std, f_std = ssz_p.std(), ssz_r.std(), ssz_l.std(), ssz_f.std()
  if p_std != 0:
      lms_p[:, 2] = (ssz_p - ssz_p.mean()) / p_std
  if r_std != 0:
      lms_r[:, 2] = (ssz_r - ssz_r.mean()) / r_std
  if l_std != 0:
      lms_l[:, 2] = (ssz_l - ssz_l.mean()) / l_std
  if f_std != 0:
      lms_f[:, 2] = (ssz_f - ssz_f.mean()) / f_std
  # Min max normalization X and Y
  # Pose normalization
  jx, jy = ssx_p.max() - ssx_p.min(), ssy_p.max() - ssy_p.min()
  if jx == jy == 0:
      pass
  else:
      if jx > jy:
          dif = (jx - jy) / 2
          bbx1, bby1, bbx2, bby2 = ssx_p.min(), ssy_p.min() - dif, ssx_p.min() + jx, ssy_p.min() + jx - dif
      elif jx < jy:
          dif = (jy - jx) / 2
          bbx1, bby1, bbx2, bby2 = ssx_p.min() - dif, ssy_p.min(), ssx_p.min() + jy - dif, ssy_p.min() + jy
      lms_p[:, 0], lms_p[:, 1] = (ssx_p - bbx1) / (bbx2 - bbx1), (ssy_p - bby1) / (bby2 - bby1)
  # Right hand normalization
  jx, jy = ssx_r.max() - ssx_r.min(), ssy_r.max() - ssy_r.min()
  if jx == jy == 0:
      pass
  else:
      if jx > jy:
          dif = (jx - jy) / 2
          bbx1, bby1, bbx2, bby2 = ssx_r.min(), ssy_r.min() - dif, ssx_r.min() + jx, ssy_r.min() + jx - dif
      elif jx < jy:
          dif = (jy - jx) / 2
          bbx1, bby1, bbx2, bby2 = ssx_r.min() - dif, ssy_r.min(), ssx_r.min() + jy - dif, ssy_r.min() + jy
      lms_r[:, 0], lms_r[:, 1] = (ssx_r - bbx1) / (bbx2 - bbx1), (ssy_r - bby1) / (bby2 - bby1)
  # Left hand normalization
  jx, jy = ssx_l.max() - ssx_l.min(), ssy_l.max() - ssy_l.min()
  if jx == jy == 0:
      pass
  else:
      if jx > jy:
          dif = (jx - jy) / 2
          bbx1, bby1, bbx2, bby2 = ssx_l.min(), ssy_l.min() - dif, ssx_l.min() + jx, ssy_l.min() + jx - dif
      elif jx < jy:
          dif = (jy - jx) / 2
          bbx1, bby1, bbx2, bby2 = ssx_l.min() - dif, ssy_l.min(), ssx_l.min() + jy - dif, ssy_l.min() + jy
      lms_l[:, 0], lms_l[:, 1] = (ssx_l - bbx1) / (bbx2 - bbx1), (ssy_l - bby1) / (bby2 - bby1)
  # Face normalization
  jx, jy = ssx_f.max() - ssx_f.min(), ssy_f.max() - ssy_f.min()
  if jx == jy == 0:
      pass
  else:
      if jx > jy:
          dif = (jx - jy) / 2
          bbx1, bby1, bbx2, bby2 = ssx_f.min(), ssy_f.min() - dif, ssx_f.min() + jx, ssy_f.min() + jx - dif
      elif jx < jy:
          dif = (jy - jx) / 2
          bbx1, bby1, bbx2, bby2 = ssx_f.min() - dif, ssy_f.min(), ssx_f.min() + jy - dif, ssy_f.min() + jy
      lms_f[:, 0], lms_f[:, 1] = (ssx_f - bbx1) / (bbx2 - bbx1), (ssy_f - bby1) / (bby2 - bby1)
  # Collect all landmark
  lms_p, lms_r, lms_l, lms_f = list(lms_p), list(lms_r), list(lms_l), list(lms_f)
  lms_all = lms_p + lms_r + lms_l + lms_f
  arr_frame.append(lms_all)
  return lms_all

def predict():
  global arr_frame
  arr_fs = np.array(arr_frame)
  arr_t = []
  for i in range(64):
    index = int(i * arr_fs.shape[0] / 64)
    if index >= arr_fs.shape[0]:
        index = arr_fs.shape[0] - 1
    arr_t.append(arr_fs[index])
  arr_fs = np.array(arr_t)
#   arr_fs = arr_fs.ravel()
  ravel = arr_fs.reshape(-1)
  deleted = np.delete(ravel, rd, axis=0)
#   return arr_fs
  X_train = deleted.reshape(-1, 58*64*3-len(rd), 1)
  arr_frame = []

  interpreter = tflite.Interpreter(model_path=filename)
  interpreter.allocate_tensors()
  input_details = interpreter.get_input_details()
  output_details = interpreter.get_output_details()
  X_train = np.float32(X_train)
  interpreter.set_tensor(input_details[0]['index'], X_train)
  interpreter.invoke()
  output_data = interpreter.get_tensor(output_details[0]['index'])
  results = np.squeeze(output_data)
  y_pred = np.argmax(results, axis=0)
  return da[y_pred]

def getSize():
  global arr_frame
  return len(arr_frame)
